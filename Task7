
pip install gtts pydub

from gtts import gTTS
from pydub import AudioSegment
import sqlite3
import os

def text_to_speech_with_sound(text, background_sound_path, language='en', save_as_file='output.mp3'):
    """
    Convert text to speech, add background sound, and save the result.

    Parameters:
    - text (str): The text you want to convert to speech.
    - background_sound_path (str): Path to the background sound file.
    - language (str): The language in which you want the text to be spoken. Default is 'en' (English).
    - save_as_file (str): The filename to save the audio as. Default is 'output.mp3'.
    """
    # Convert text to speech
    tts = gTTS(text=text, lang=language, slow=False)
    tts.save(save_as_file)

    # Load audio files
    text_audio = AudioSegment.from_mp3(save_as_file)
    background_sound = AudioSegment.from_file(background_sound_path)

    # Overlay text audio on background sound
    combined_audio = background_sound.overlay(text_audio)

    # Save the combined audio
    combined_audio.export(save_as_file, format="mp3")

def save_to_database(text, audio_file_path, database_path='speech_data.db'):
    """
    Save text and audio file path to a database.

    Parameters:
    - text (str): The original text.
    - audio_file_path (str): The path to the audio file.
    - database_path (str): Path to the SQLite database file. Default is 'speech_data.db'.
    """
    # Connect to the database
    connection = sqlite3.connect(database_path)
    cursor = connection.cursor()

    # Create a table if it doesn't exist
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS speech_data (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            text TEXT,
            audio_path TEXT
        )
    ''')

    # Insert data into the table
    cursor.execute('INSERT INTO speech_data (text, audio_path) VALUES (?, ?)', (text, audio_file_path))

    # Commit changes and close the connection
    connection.commit()
    connection.close()

if __name__ == "__main__":
    input_text = "Hello, this is a test. I hope this text-to-speech example works well."
    background_sound_path = "background_sound.mp3"  # Replace with the path to your background sound file

    output_audio_path = 'output_with_sound.mp3'

    text_to_speech_with_sound(input_text, background_sound_path, save_as_file=output_audio_path)
    save_to_database(input_text, output_audio_path)

